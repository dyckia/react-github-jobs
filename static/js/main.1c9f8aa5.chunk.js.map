{"version":3,"sources":["useFetchJobs.js","Job.js","JobsPagination.js","SearchForm.js","App.js","index.js"],"names":["API_URL","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","Job","job","useState","isToggled","setIsToggled","Card","className","Body","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","location","style","wordBreak","source","how_to_apply","height","alt","src","company_logo","Text","Button","onClick","Collapse","in","description","JobsPagination","page","setPage","adjustPage","diff","prevPage","Pagination","Prev","Item","Ellipsis","active","Next","SearchForm","params","onParamChange","Form","Row","Group","as","Col","Label","Control","name","value","onChange","xs","Check","label","full_time","id","App","setParams","useReducer","dispatch","useEffect","cancelToken1","axios","CancelToken","get","cancelToken","token","markdown","then","res","data","catch","e","isCancel","cancelToken2","length","cancel","useFetchJobs","Container","param","target","prevParams","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c9f8aa5.chunk.js","sourcesContent":["import { useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst API_URL = \"https://cors-fetc.herokuapp.com/https://jobs.github.com/positions.json\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"loading\":\n      return {loading: true, jobs: []};\n    case \"retrieved\":\n      return {...state, loading: false, jobs: action.payload.jobs};\n    case \"error\":\n      return {...state, error: action.payload.error, loading: false, jobs: []};\n    case \"checkNextPage\":\n      return {...state, hasNextPage: action.payload.hasNextPage};\n    default:\n      return state;\n  }\n}\n\nexport default function useFetchJobs(params, page) {\n  const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true });\n\n  useEffect(() => {\n    const cancelToken1 = axios.CancelToken.source();\n    axios.get(API_URL, {\n      cancelToken: cancelToken1.token,\n      params: {...params, page: page, markdown: true}\n    }).then(res => {\n      dispatch({type: \"retrieved\", payload: {jobs: res.data}});\n    }).catch(e => {\n      if (axios.isCancel(e)) return;\n      dispatch({type: \"error\", payload: {error: e}});\n    });\n\n    // check if there is next page\n    const cancelToken2 = axios.CancelToken.source();\n    axios.get(API_URL, {\n      cancelToken: cancelToken2.token,\n      params: { ...params, page: page + 1, markdown: true }\n    }).then(res => {\n      dispatch({ type: \"checkNextPage\", payload: { hasNextPage: res.data.length !== 0} });\n    }).catch(e => {\n      if (axios.isCancel(e)) return;\n      dispatch({ type: \"error\", payload: { error: e } });\n    });\n\n    return () => {\n      cancelToken1.cancel();\n      cancelToken2.cancel();\n    };\n  }, [params, page]);\n\n  return state;\n}","import { Card, Badge, Button, Collapse } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport { useState } from 'react';\n\nexport default function Job({job}) {\n  const [isToggled, setIsToggled] = useState(false);\n  return (\n    <Card className=\"mb-3\">\n      <Card.Body>\n        <div className=\"d-flex justify-content-between\">\n          <div>\n            <Card.Title>\n              {job.title} - <span className=\"text-muted font-weight-light\">\n                {job.company}\n              </span>\n            </Card.Title>\n            <Card.Subtitle className=\"text-muted mb-2\">\n              {new Date(job.created_at).toLocaleDateString()}\n            </Card.Subtitle>\n            <Badge variant=\"secondary\" className=\"mr-2\">{job.type}</Badge>\n            <Badge variant=\"secondary\" className=\"mr-2\">{job.location}</Badge>\n            <div style={{wordBreak: \"break-all\"}}>\n              <ReactMarkdown source={job.how_to_apply} />\n            </div>\n          </div>\n          <img className=\"d-none d-md-block\" height=\"50\" alt={job.company} src={job.company_logo} />\n        </div>\n        <Card.Text>\n          <Button \n            variant=\"primary\" \n            onClick={() => setIsToggled(() => !isToggled)}\n          >\n            {isToggled ? \"Hide Details\" : \"View Details\"}\n          </Button>\n        </Card.Text>\n        <Collapse in={isToggled}>\n          <div>\n            <ReactMarkdown source={job.description} />\n          </div>\n        </Collapse>\n      </Card.Body>\n    </Card>\n  )\n}","import { Pagination } from 'react-bootstrap';\n\nexport default function JobsPagination({page, setPage, hasNextPage}) {\n  function adjustPage(diff) {\n    setPage(prevPage => prevPage + diff);\n  }\n\n  return (\n    <Pagination>\n      {page !== 1 && <Pagination.Prev onClick={() => adjustPage(-1)} />}\n      {page !== 1 && <Pagination.Item onClick={() => setPage(1)} >1</Pagination.Item>}\n      {page > 3 && <Pagination.Ellipsis />}\n      {page > 2 && <Pagination.Item onClick={() => adjustPage(-1)} >{page - 1}</Pagination.Item>}\n      <Pagination.Item active>{page}</Pagination.Item>\n      {hasNextPage && <Pagination.Item onClick={() => adjustPage(1)} >{page + 1}</Pagination.Item>}\n      {hasNextPage && <Pagination.Next onClick={() => adjustPage(1)} />}\n      \n    </Pagination>\n  )\n}","import { Form, Col } from 'react-bootstrap';\n\nexport default function SearchForm({params, onParamChange}) {\n  return (\n    <Form className=\"mb-4\">\n      <Form.Row className=\"align-items-end\">\n        <Form.Group as={Col}>\n          <Form.Label>Description</Form.Label>\n          <Form.Control type=\"text\" name=\"description\" value={params.description || ''} \n                        onChange={onParamChange} />\n        </Form.Group>\n        <Form.Group as={Col}>\n          <Form.Label>Location</Form.Label>\n          <Form.Control type=\"text\" name=\"location\" value={params.location || ''}\n            onChange={onParamChange} />\n        </Form.Group>\n        <Form.Group as={Col} xs=\"auto\" className=\"ml-2\">\n          <Form.Check type=\"checkbox\" label=\"Only Full Time\" value={params.full_time}\n                      name=\"full_time\" id=\"full-time\" onChange={onParamChange} \n                      className=\"mb-2\" />\n        </Form.Group>\n      </Form.Row>\n    </Form>\n  );\n}","import React, { useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport useFetchJobs from './useFetchJobs';\nimport Job from './Job';\nimport JobsPagination from './JobsPagination';\nimport SearchForm from './SearchForm';\n\nfunction App() {\n  const [params, setParams] = useState({});\n  const [page, setPage] = useState(1);\n  // custom hooks for fetching jobs from GitHub Jobs API\n  const { jobs, loading, error, hasNextPage } = useFetchJobs(params, page);\n  \n  function handleParamChange(e) {\n    const param = e.target.name;\n    const value = e.target.value;\n    setPage(1);\n    setParams(prevParams => {return {...prevParams, [param]: value}});\n  }\n\n  return (\n    <Container className=\"my-4\">\n      <h1 className=\"mb-4\">GitHub Jobs</h1>\n      <SearchForm params={params} onParamChange={handleParamChange} />\n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n      {loading && <h1>Loading...</h1>}\n      {error && <h1>Error. Try refreshing.</h1>}\n      {jobs.map(job => {\n        return <Job key={job.id} job={job}></Job>\n      })}\n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}